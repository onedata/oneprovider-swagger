# TODO VFS-11377 remove deprecated values after next major release
type: object
description: File or directory attributes.
properties:
  fileId:
    type: string
    description: Id of the file/directory. Successor of the **deprecated `file_id`**.
  index:
    type: string
    description: Index pointing to this file/directory that can be provided as starting point when listing files.
  type:
    $ref: '#/definitions/FileType'
  activePermissionsType:
    type: string
    enum:
      - posix
      - acl
    description: Type of permissions that are taken into account when determining access rights to this file/directory.
  mode:
    type: string
    description: POSIX file permissions as string expressing octal notation. For a shared file/directory
      accessed in public mode, only the last byte (`other`) is shown, as it applies to the anonymous users accessing it.
  acl:
    $ref: '#/definitions/Acl'
  name:
    type: string
    description: > 
      Name of the file/directory. In case of name conflicts (when two files with identical name are 
      created simultaneously in two providers), this name is disambiguated by extending it with `originProviderId`.
  conflictingName:
    type: string
    description: >
      Original name of the file/directory in case of file name conflict, as described in `name`. 
      `null` if there is no file name conflict.
  path:
    type: string
    description: Logical path to the file/directory.
  parentFileId:
    type: string
    description: (deprecated parent_id) Id of the parent directory or `null` in case of file tree root 
      (space root, archives root, trash, root of a shared file/directory).
  displayGid:
    type: string
    description: (deprecated storage_group_id) GID of this file/directory displayed in the Oneclient mounted filesystem.
  displayUid:
    type: string
    description: (deprecated storage_user_id) UID of this file/directory displayed in the Oneclient mounted filesystem.
  atime:
    type: integer
    description: Last access timestamp in seconds (UNIX epoch).
  mtime:
    type: integer
    description: Last modification timestamp in seconds (UNIX epoch).
  ctime:
    type: integer
    description: Last attributes modification timestamp in seconds (UNIX epoch).
  size:
    type: integer
    description: >
      Logical size of the file/directory in bytes. For directories, it can be `null` 
      when directory statistics are not enabled or not yet calculated. See 
      [directory size statistics](#operation/get_directory_size_stats) 
      for more information and details about different data size metrics.
  isFullyReplicatedLocally:
    type: boolean
    description: >      
      Indicates whether a complete file replica is present on the queried provider.
      Applicable only for regular files (`null` otherwise).
  localReplicationRate:
    type: number
    description: >
      Ratio (`0.0 .. 1.0`) of the local replica size present on the queried provider to the total virtual data size. # FIXME virtual or logical?
      See also [directory size statistics](#operation/get_directory_size_stats) for more information
      about different data size metrics.
  originProviderId:
    type: string
    description: Id of the provider in which this file/directory was created.
  directShareIds:
    type: array
    description: > 
      (deprecated shares) The list of Ids of shares created for this file/directory. For every share, only
      the root file/directory will contain the share Id on the list and not the nested files/directories.
      For a shared file/directory accessed in public mode, shows only the Id of the share in the context 
      of which the file is being accessed.
    items:
      type: string
  ownerUserId:
    type: string
    description: (deprecated owner_id) User Id of the owner of this file/directory.
  hardlinkCount:
    type: integer
    description: The number of hardlinks (including this one) associated with this file/directory.
  symlinkValue:
    type: string
    description: >
      The path to which the symbolic link points. Applicable only for symlinks (`null` otherwise).
      **NOTE**: The path is shown even for a shared file/directory accessed in public mode.
  hasCustomMetadata:
    type: boolean
    description: Indicates whether this file/directory has any [custom metadata](#tag/Custom-File-Metadata) attached.
  effProtectionFlags:
    allOf:
      - description: >
          File protection flags that effectively concern this file/directory (a sum of protection flags from the
          file/directory itself, its ancestor directories and hardlinks). **NOTE**: the file may be deleted 
          even when the `data_protection` flag is enabled, as long as it inherited the flag through one of its 
          hardlinks (see `effDatasetProtectionFlags`).
      - $ref: '#/definitions/ProtectionFlags'
  effDatasetProtectionFlags:
    allOf:
      - description: >
          File protection flags inherited from datasets that include this file/directory (protection flags of 
          hardlinks are not taken into account). **NOTE**: the file/directory can be deleted if and only if 
          the `data_protection` flag is disabled.
      - $ref: '#/definitions/ProtectionFlags'
  effDatasetMembership:
    allOf:
      - description: >
          Indicates whether this file/directory effectively belongs to a dataset, 
          i.e. is a dataset or is in a subtree of a dataset.
      - $ref: '#/definitions/FileMembership'
  effQosMembership:
    allOf:
      - description: >
          Indicates whether this file/directory has any effective QoS requirement, 
          i.e. a direct QoS requirement or any QoS requirement inherited from its ancestors.
      - $ref: '#/definitions/FileMembership'
  qosStatus:
    allOf:
      - description: Aggregate status of all effective QoS requirements that concern this file/directory.
      - $ref: '#/definitions/QosStatus'
  recallRootId:
    type: string
    description: > 
      Id of the archive recall that this file/directory belongs to (is in the subtree of). 
      Archive recall is a process that creates a copy of a dataset archive (snapshot) in the space filesystem, 
      i.e. creates a regular directory, but the files and directories inside are assigned this attribute.      
      `null` when the file does not belong to any archive recall.
  xattr.*:
    type: string
    description: >
      Value of requested extended attribute key (`*` is replaced with the key). Repeated for each requested key.
      `null` when given extended attribute was not found.
example:
  fileId: 00000CF4706775696423745F772D67686431633765446F4D76546D6...
  index: g2gDZAAKbGlzdF9pbmRleG0AAAAEbmFtZW0AAAAHdHJlZV9pZA
  type: REG
  activePermissionsType: posix
  mode: "511"
  acl: []
  name: File1.txt@a47b8b7a04b197c6cd99581047b8b7ad
  conflictingName: File1.txt
  path: /space/Dir1/File1.txt # TODO VFS-11428 update after issue is resolved
  parentFileId: 000006CB66373686172654775696423333964323636616564636562...
  displayGid: 1101841
  displayUid: 1935313
  atime: 1464958683054
  mtime: 1464958683051
  ctime: 1464958681054
  size: 1024
  isFullyReplicatedLocally: false
  localReplicationRate: 0.8
  originProviderId: a47b8b7a04b197c6cd99581047b8b7ad
  directShareIds:
    - 1d24c36707d99197c6cd995810a43aca
    - 6825604b0eb6a47b8b7a04b6369eb24d
  ownerUserId: b6b6a47b8b7a04b63a45604b07b8b7a2
  hardlinkCount: 1
  symlinkValue: null
  hasCustomMetadata: true
  effProtectionFlags:
    - data_protection
    - metadata_protection
  effDatasetProtectionFlags:
    - data_protection
  effDatasetMembership: direct_and_ancestor
  effQosMembership: ancestor
  qosStatus: fulfilled
  recallRootId: 000006431633765446F4D76546D6F47067D67686431633765446F4D76546D6....
  xattr.key1: value1
  xattr.key2: null
