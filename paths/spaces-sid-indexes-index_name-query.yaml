get:
  operationId: query_space_index
  x-onedata-service: oneprovider
  x-onedata-module: metadata
  x-onedata-resource: index
  x-onedata-method: query_space_index
  summary: Query index
  tags:
    - Data
  x-bash-codegen-description: |
    This method returns the list of result objects for files which match the query 
    on a predefined index. 
    Those objects contains following fields:
    - id - for use as `startkey_docid` or `endkey_docid` in following queries
    - key - the first element of list returned by user defined mapping/spatial function
    - value - the second element of list returned by user defined mapping/spatial function
    - geometry - describes geometry of data (only available in case of spatial indexes)

    Currently, indexes are defined per space, i.e. the result will be limited
    to files and folders in a space for which the index was defined.

    This operation supports custom index query attributes as provided by
    Couchbase:
      [http://docs.couchbase.com/admin/admin/Views/views-querying.html].

    Additionally, Couchbase spatial queries:
      [http://docs.couchbase.com/admin/admin/Views/views-geospatial.html] are
    possible using the `bbox` query parameter.
    These queries are possible on indexes which emit values conforming to the
    [http://geojson.org/] format.

  description: |
    This method returns the list of result objects for files which match the query on a predefined index. 
    Those objects contains following fields:
    * ``id`` - for use as `startkey_docid` or `endkey_docid` in following queries
    * ``key`` - the first element of list returned by user defined mapping/spatial function
    * ``value`` - the second element of list returned by user defined mapping/spatial function
    * ``geometry`` - describes geometry of data (only available in case of spatial indexes)

    Currently, indexes are defined per space, i.e. the result will be limited to files and folders in a space for which the index was defined.

    This operation supports also custom index query attributes as provided by [Couchbase](http://docs.couchbase.com/admin/admin/Views/views-querying.html).

    Additionaly, Couchbase [spatial queries](http://docs.couchbase.com/admin/admin/Views/views-geospatial.html) are possible using `bbox` query parameter.
    These queries are possible on indexes which emit values conforming to the [GeoJSON](http://geojson.org/) format.

    ***Example cURL requests***

    **Get 4 files from index skipping first 10**

    With example map function used:
    ```javascript
    function (id, type, meta, ctx) {
      if(type == 'custom_metadata' && meta['onexattr']) {
        return [meta['onexattr'], id];
      }
      return null;
    }
    ```

    ```bash
    curl --tlsv1.2 -H "X-Auth-Token: $TOKEN" -X GET \
    https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME/query?skip=10&limit=4

    [
      {
        "id": "fd18b793d446099ae84f8bd5c054ad34",
        "key": 1,
        "value": "00000000002C45416775696423633062636533343133336336636633393238336134323333396430656461393323737061636531"
      },
      {
        "id": "2785dbd91120e341265f9ee2370ccf08",
        "key": 2,
        "value": "00000000002CF7DB6775696423396261373964653764643866336432393436323262313133393738643338383323737061636531"
      },
      {
        "id": "60a9e6da61e12deeb3e6c688fe861c01",
        "key": 3,
        "value": "00000000002C47916775696423336330336538623730333439353233383631313966346139343731316631656323737061636531"
      },
      {
        "id": "651d696a8446e92ab55de163f9b8594d",
        "key": 4,
        "value": "00000000002CA8906775696423633835366438613139666565336337666165623538303736356465383039356223737061636531"
      },
      ...
    ]
    ```

    **Get list of files associated with geospatial coordinates**

    With example spatial function used:
    ```javascript
    function (id, type, meta, ctx) {
      if(type == 'custom_metadata' && meta['onexattr']) {
        return [meta['onexattr'], id];
      }
      return null;
    }
    ```

    ```bash
    curl --tlsv1.2 -H "X-Auth-Token: $TOKEN" -X GET \
    https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME/query?spatial=true&stale=false

    [
      {
        "geometry": {
          "type": "Point",
          "coordinates": [0, 0]
        },
        "id": "36cfb018c312653e65b346c421d7a678",
        "key": [[0, 0], [0, 0]],
        "value": "00000000002C5DA36775696423663535633934306564393632656530666133663330633137393362333765356223737061636531"
      },
      {
        "geometry": {
          "type": "Point",
          "coordinates": [5.1, 10.22]
        },
        "id": "972eb78ff8e262c4bebdc11799c20f51",
        "key": [[5.1, 5.1], [10.22, 10.22]],
        "value": "00000000002C678A6775696423363030666461383130623030386333616664363637396666653334366137656623737061636531"
      }
    ]
    ```

    **Get file popularity for a specific space**
    ```bash
    curl --tlsv1.2 -sSk -X GET -H "X-Auth-Token: $TOKEN" "https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/file-popularity/query?spatial=true&start_range=\[1,0,0,0,0,0\]&end_range=\[null,null,null,null,null,null\]"
    ```
  produces:
    - application/json
  responses:
    '200':
      description: Query results returned successfully.
      schema:
        type: array
        items:
          type: object
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: File not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
  - name: sid
    in: path
    description: Space ID in which index exist.
    type: string
    required: true
  - name: index_name
    in: path
    description: Name of the index.
    type: string
    required: true
  - name: descending
    in: query
    description: Return the documents in descending order (by key).
    type: boolean
    required: false
    default: false
  - name: key
    in: query
    description: >
        Return only documents that match the specified key.
        Key must be specified as a JSON value.
    type: string
    required: false
  - name: keys
    in: query
    description: >
        Return only documents that match any of the keys specified within the given array.
        Keys must be specified as a JSON array, escaped properly.
        Sorting is not applied when using this option.
    type: string
    required: false
  - name: limit
    in: query
    description: >
      Limit the number of the returned documents to the specified number.
    type: integer
    required: false
  - name: skip
    in: query
    description: >
      Skip this number of records before starting to return the results.
    type: integer
    required: false
  - name: startkey
    in: query
    description: >
      Return records with a value equal to or greater than the specified key.
      Key must be specified as a JSON value.
    type: string
    required: false
  - name: startkey_docid
    in: query
    description: >
      Return records starting with the specified document ID.
    type: string
    required: false
  - name: endkey
    in: query
    description: >
      Stop returning records when the specified key is reached.
      Key must be specified as a JSON value.
    type: string
    required: false
  - name: endkey_docid
    in: query
    description: >
        Stop returning records when the specified document ID is reached.
    type: string
    required: false
  - name: inclusive_end
    in: query
    description: >
      Specifies whether the specified end key is included in the result.
      ***Note:*** Do not use `inclusive_end` with `key` or `keys`.
    type: boolean
    required: false
    default: false
  - name: stale
    in: query
    description: >
      Allow records from a stale view to be used. Allowed values are `ok`, `update_after` or `false`.
    type: string
    required: false
    default: update_after
    enum:
      - ok
      - update_after
      - "false"
  - name: bbox
    in: query
    description: >
      Specify the bounding box for a spatial query (e.g. ?bbox=-180,-90,0,0)
    type: string
    required: false
  - name: spatial
    in: query
    description: |
      Enable spatial type of query. When querying the file-popularity index, the `start_range` and
      `end_range` constraints should be specified as 6-dimensional arrays, with the following fields:
      `[SizeLowerLimit, LastOpenHoursEpochLowerLimit, TotalOpenLowerLimit, HoursOpenAvgLowerLimit, DayOpenAvgLowerLimit, MonthOpenAvgLowerLimit]`.
    type: boolean
    required: false
  - name: start_range
    in: query
    type: string
    required: false
    description: Array specifying the range in spatial queries (e.g. `start_range=[1,0,0,0,0,0]`).
  - name: end_range
    in: query
    type: string
    required: false
    description: Array specifying the range in spatial queries (e.g. `end_range=[null,null,null,null,null,null]`).
  x-code-samples:
  - lang: Shell
    source: "oneprovider-rest-cli querySpaceIndex sid=$SPACE_ID index_name=$INDEX_NAME key=value1"
