get:
  operationId: get_json_metadata
  x-onedata-gri:
    type: op_file
    id: ?OBJECTID_BINDING(id)
    aspect: json_metadata
  summary: Get file json metadata
  tags:
    - Custom File Metadata
  x-bash-codegen-description: |
    This method returns the json metadata associated with file specified by [$FILE_ID](#operation/lookup_file_id).

    By default the method returns the complete json metadata. But it is possible to request
    only a part of the document by specifying `filter_type` and `filter` attributes in the query.

    Supported filter types are:
      * **keypath** - list of JSON keys which point to requested JSON object,
        separated by `.`, array elements should be expressed as `[i]`
        (e.g. `key1.key2.[2].key3`)

  description: |
    This method returns the json metadata associated with file specified by [$FILE_ID](#operation/lookup_file_id).

    By default the method returns the complete json metadata. But it is possible to request
    only a part of the document by specifying `filter_type` and `filter` attributes in the query.

    Supported filter types are:
      * **keypath** - list of JSON keys which point to requested JSON object,
        separated by `.`, array elements should be expressed as `[i]`
        (e.g. `key1.key2.[2].key3`)

    ***Example cURL requests***

    **Get specific JSON value from metadata document**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" -X GET \
    https://$HOST/api/v3/oneprovider/data/$FILE_ID/metadata/json?filter_type=keypath&filter=key1.key2.[2].key3

    {"key4": "value"}
    ```
  produces:
    - application/json
  responses:
    '200':
      description: JSON metadata returned successfully.
      schema:
        type: string
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: File not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
  - name: id
    in: path
    description: Id of the file.
    type: string
    required: true
  - name: filter_type
    in: query
    description: The type of filter to apply to the metadata document.
    type: string
    enum:
      - keypath
    required: false
  - name: filter
    in: query
    description: >
      The filter to apply to the metadata document before returning.
      Required if `filter_type` is specified.
    type: string
    required: false
  - name: inherited
    in: query
    description: >
      When set to true, this operation will merge the metadata documents from
      parent directories as well as entire space into a single JSON document.
    type: boolean
    required: false
  x-code-samples:
  - lang: Shell
    source: "oneprovider-rest-cli getJsonMetadata id=$FILE_ID inherited=false"


put:
  operationId: set_json_metadata
  x-onedata-parse_body: '{as_is, <<"metadata">>}'
  x-onedata-gri:
    type: op_file
    id: ?OBJECTID_BINDING(id)
    aspect: json_metadata
  summary: Set file json metadata
  tags:
    - Custom File Metadata
  x-bash-codegen-description: |
    This method allows to set json metadata for a file specified by [$FILE_ID](#operation/lookup_file_id).

    This operation will replace the previous json metadata if any.

  description: |
    This method allows to set json metadata for a file specified by [$FILE_ID](#operation/lookup_file_id).

    This operation will replace the previous json metadata if any.

    ***Example cURL requests***

    **Set JSON metadata for file**
    ```bash
    curl -H "X-Auth-Token: $TOKEN"\
    -X PUT https://$HOST/api/v3/oneprovider/data/$FILE_ID/metadata/json
    -H "Content-Type: application/json" -d '{
        "key1": {
            "key2": ["val1", "val2", "val3", "val4"]
        }
    }'
    ```
  consumes:
    - application/json
  responses:
    '204':
      description: JSON metadata updated successfully.
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: File not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
  - name: id
    in: path
    description: Id of the file.
    type: string
    required: true
  - name: filter_type
    in: query
    description: The type of filter to apply to the metadata document.
    type: string
    enum:
      - keypath
    required: false
  - name: filter
    in: query
    description: >
      The filter allowing to set specific metadata document key.
      Required if `filter_type` is specified.
    type: string
    required: false
  - name: metadata
    in: body
    description: The json metadata.
    required: true
    schema:
      type: string
  x-code-samples:
  - lang: Shell
    source: "cat metadata.json | oneprovider-rest-cli setJsonMetadata id=$FILE_ID -"


delete:
  operationId: remove_json_metadata
  x-onedata-gri:
    type: op_file
    id: ?OBJECTID_BINDING(id)
    aspect: json_metadata
  summary: Remove file json metadata
  tags:
    - Custom File Metadata
  x-bash-codegen-description: |
    Removes json metadata from the file specified by [$FILE_ID](#operation/lookup_file_id).
  description: |
    Removes json metadata from the file specified by [$FILE_ID](#operation/lookup_file_id).

    ***Example cURL requests***

    **Remove file json metadata**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" \
    -X DELETE https://$HOST/api/v3/oneprovider/data/$FILE_ID/metadata/json
    ```
  responses:
    '204':
      description: File json metadata has been removed.
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: File not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
    - name: id
      in: path
      description: Id of the file.
      type: string
      required: true
  x-code-samples:
    - lang: Shell
      source: "oneprovider-rest-cli removeJsonMetadata id=$FILE_ID"
