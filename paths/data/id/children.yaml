post:
  operationId: create_file
  x-onedata-gri:
    type: op_file
    id: ?OBJECTID_BINDING(id)
    aspect: child
  summary: Create file in directory
  tags:
    - Basic File Operations
  x-bash-codegen-description: |
    Creates a file in the directory specified by [$PARENT_ID](#operation/lookup_file_id).
    
    If the file already exists, the operation fails with an error.
    
    The file type can be of:
    - `REG` (regular file) - in this case, **the data sent in request body (if any)
    is saved as file content**.
    - `DIR` (directory).
    - `LNK` (hard link) - requires that `target_file_id` pointing to a regular file
    is specified.
    - `SYMLNK` (symbolic link) - requires that `target_file_path` is specified.
    When creating symbolic link with absolute path starting from specific space
    it is necessary to do so by replacing `/$SPACE_NAME/` in path by special prefix in the form
    `<__onedata_space_id:$SPACE_ID>/` (where $SPACE_ID is actual space id)

  description: |
    Creates a file in the directory specified by [$PARENT_ID](#operation/lookup_file_id).
    
    If the file already exists, the operation fails with an error.
    
    The file type can be of:
    - `REG` (regular file) - in this case, **the data sent in request body (if any)
    is saved as file content**.
    - `DIR` (directory).
    - `LNK` (hard link) - requires that `target_file_id` pointing to a regular file
    is specified.
    - `SYMLNK` (symbolic link) - requires that `target_file_path` is specified.
    When creating symbolic link with absolute path starting from specific space
    it is necessary to do so by replacing `/$SPACE_NAME/` in path by special prefix in the form
    `<__onedata_space_id:$SPACE_ID>/` (where $SPACE_ID is actual space id)

    ***Example cURL requests***

    **Create file**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" \
    -X POST "https://$PROVIDER_HOST/api/v3/oneprovider/data/$PARENT_ID/children?name=$NAME"
    -H "Content-Type: application/octet-stream" -d "@file.dat"

    {
       "fileId": "094576776E667431723230677767776C6B497031394E445F6E3868677873..."
    }
    ```

    **Create directory**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" \
    -X POST "https://$PROVIDER_HOST/api/v3/oneprovider/data/$PARENT_ID/children?name=$NAME&type=DIR"

    {
       "fileId": "000000006CB6637368617265477569642333396432363661656463656266..."
    }
    ```

    **Create hard link**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" \
    -X POST "https://$PROVIDER_HOST/api/v3/oneprovider/data/$PARENT_ID/children?name=$NAME&type=LNK&target_file_id=$TARGET_FILE_ID"

    {
       "fileId": "000000184465677569642373706163655F73706163653123737061636531..."
    }
    ```

    **Create symbolic link**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" \
    -X POST "https://$PROVIDER_HOST/api/v3/oneprovider/data/$PARENT_ID/children?name=$NAME&type=SYMLNK&target_file_path=$TARGET_FILE_PATH"

    {
       "fileId": "00989AB98890037368617265477569642333396432363661656463656266..."
    }
    ```

    See also [Create file at path](#operation/create_file_at_path).

  consumes:
    - application/octet-stream
  produces:
    - application/json
  responses:
    '201':
      description: >
        The request has been accepted and the result is the file Id.
        Also URI of the file in form https://$PROVIDER_HOST/api/v3/oneprovider/data/{id} is
        returned in the response `Location` header.
      headers:
        Location:
          description: URI of the file.
          type: string
      schema:
        type: object
        properties:
          fileId:
            type: string
            description: file Id.
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: File not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
    - name: id
      in: path
      description: Id of the parent directory.
      required: true
      type: string
    - name: name
      in: query
      description: Name of the file.
      required: true
      type: string
    - name: type
      in: query
      description: Type of the file.
      required: false
      type: string
      enum:
        - REG
        - DIR
        - LNK
        - SYMLNK
      default: REG
    - name: mode
      in: query
      description: POSIX file permissions in decimal format.
      required: false
      type: integer
    - name: offset
      in: query
      description: > 
        Offset at which the data sent as request body will be written to the file (relevant only if `type == "REG"`).
      required: false
      type: integer
      default: 0
    - name: target_file_id
      in: query
      description: >
        The Id of the file to which the hard link should point (relevant only if `type == "LNK"`).
      required: false
      type: string
    - name: target_file_path
      in: query
      description: >
        Path to which the symbolic link should point (relevant only if `type == "SYMLNK"`).
      required: false
      type: string
    - name: content
      in: body
      description: File content to be written at specified offset (relevant only if `type == "REG"`).
      required: false
      schema:
        type: string
        format: binary
  x-code-samples:
    - lang: Shell
      source: "oneprovider-rest-cli createFile id=$PARENT_ID name=$FILE_NAME"


get:
  operationId: list_children
  x-onedata-parse_body: as_json_params
  x-onedata-gri:
    type: op_file
    id: ?OBJECTID_BINDING(id)
    aspect: children
  tags:
    - Basic File Operations
  summary: List directory files and subdirectories
  x-bash-codegen-description: |
    Returns the list of directory files and subdirectories for directory
    specified by [$DIR_ID](#operation/lookup_file_id).
    
    **NOTE**: the listing may contain files that are not fully synchronized or have been deleted in parallel.
    For that reason, it's recommended to safeguard consecutive calls referring to the directory children
    against `ENOENT` errors.
    
    **NOTE**: since version **21.02.7**, this endpoint accepts **options as JSON body** rather than in the query string.
    Moreover, some of the attributes have been renamed and the list of available ones has been extended.
    The old behaviour of the endpoint has been retained but is **DEPRECATED** and scheduled for
    deletion in the future major release. The following changes in attribute names were introduced:
    * `file_id` -> `fileId`
    * `mode` -> `posixPermissions`
    * `parent_id` -> `parentFileId`
    * `storage_group_id` -> `displayGid`
    * `storage_user_id` -> `displayUid`
    * `is_fully_replicated` -> `isFullyReplicatedLocally`
    * `provider_id` -> `originProviderId`
    * `shares` -> `directShareIds`
    * `owner_id` -> `ownerUserId`
    * `hardlinks_count` -> `hardlinkCount`

  description: |
    Returns the list of directory files and subdirectories for directory
    specified by [$DIR_ID](#operation/lookup_file_id).
    
    **NOTE**: the listing may contain files that are not fully synchronized or have been deleted in parallel.
    For that reason, it's recommended to safeguard consecutive calls referring to the directory children
    against `ENOENT` errors.
    
    **NOTE**: since version **21.02.7**, this endpoint accepts **options as JSON body** rather than in the query string.
    Moreover, some of the attributes have been renamed and the list of available ones has been extended.
    The old behaviour of the endpoint has been retained but is **DEPRECATED** and scheduled for
    deletion in the future major release. The following changes in attribute names were introduced:
    * `file_id` -> `fileId`
    * `mode` -> `posixPermissions`
    * `parent_id` -> `parentFileId`
    * `storage_group_id` -> `displayGid`
    * `storage_user_id` -> `displayUid`
    * `is_fully_replicated` -> `isFullyReplicatedLocally`
    * `provider_id` -> `originProviderId`
    * `shares` -> `directShareIds`
    * `owner_id` -> `ownerUserId`
    * `hardlinks_count` -> `hardlinkCount`

    ***Example cURL requests***

    **Get files in space subdirectory**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" -H 'Content-type: application/json' \
    -X GET "https://$PROVIDER_HOST/api/v3/oneprovider/data/$DIR_ID/children" -d '{
      "attributes": ["name", "size", "xattr.key"],
      "limit": 2
    }'

    {
        "children": [
            { 
                "name": File1.txt,
                "size": 1024,
                "xattr.key": "extended_attribute_value"
            },
            { 
                "name": File2.txt,
                "size": 16384,
                "xattr.key": null
            }
        ],
        "isLast": false,
        "nextPageToken": "g2gDZAAKbGlua190b2tlbmgCZAAMY2FjaGVkX3Rva2VuWgADY..."
    }
    ```
  consumes:
    - application/json
  produces:
    - application/json
  responses:
    '200':
      description: The list of directory files and subdirectories.
      schema:
        $ref: '#/definitions/DirectoryChildren'
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: Invalid path - file or directory not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
    - name: id
      in: path
      description: Id of the directory to be listed.
      type: string
      required: true

    - name: data
      in: body
      required: false
      schema:
        $ref: '#/definitions/GetDirectoryChildrenRequest'

    - name: legacy_options
      in: query
      required: false
      description: >
        The old behaviour of the endpoint has been retained but is **DEPRECATED** and scheduled for
        deletion in the future major release. You may refer to the 
        [docs for 21.02.7](https://onedata.org/#/home/api/21.02.3/oneprovider?anchor=operation/list_files_recursively),
        but it's recommended to use the new API with options as JSON body.
      type: string

  x-code-samples:
  - lang: Shell
    source: "oneprovider-rest-cli listChildren id=$FILE_ID limit=100 index=filename.txt"