get:
  operationId: get_space_view
  x-onedata-gri:
    type: op_space
    id: ?BINDING(sid)
    aspect: "{view, ?BINDING(view_name)}"
  summary: Get view
  tags:
    - View
  x-bash-codegen-description: |
    This method returns a JSON describing specific view.

    This operation requires `space_view_views` privilege.
  description: |
    This method returns a JSON describing specific view.

    This operation requires `space_view_views` privilege.

    ***Example cURL requests***

    **Get information about specific view**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" -X GET \
    https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME

    {
        "spatial": false,
        "mapFunction": "function (id, type, meta, ctx) {\\n        if(type == \\'custom_metadata\\' && meta[\\'onexattr\\']) {\\n            return [meta[\\'onexattr\\'], id];\\n        }\\n        return null;\\n    }"
        "reduceFunction": null,
        "viewOptions": {
            "update_min_changes": 100
        },
        "providers": [
            "6b9bc70630547d925861a27e1f050dfe"
        ]
    }
    ```

  produces:
    - application/json
  responses:
    '200':
      description: Information about view.
      schema:
        $ref: '#/definitions/View'
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: File not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
  - name: sid
    in: path
    description: >
      Space Id in which view exist.
    type: string
    required: true
  - name: view_name
    in: path
    description: Name of the view.
    type: string
    required: true
  x-code-samples:
  - lang: Shell
    source: "oneprovider-rest-cli getSpaceView sid=$SPACE_ID view_name=$VIEW_NAME"


put:
  operationId: create_space_view
  x-onedata-parse_body: '{as_is, <<"mapFunction">>}'
  x-onedata-gri:
    type: op_space
    id: ?BINDING(sid)
    aspect: "{view, ?BINDING(view_name)}"
  summary: Create view
  tags:
    - View
  x-bash-codegen-description: |
    This method creates or replaces an existing view with a new one.

    This operation requires `space_manage_views` privilege.
  description: |
    This method creates or replaces an existing view with a new one.

    This operation requires `space_manage_views` privilege.

    ***Example cURL requests***

    **Create space view**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" \
    -H "Content-Type: application/javascript" \
    -d "@./my_improved_view1.js" \
    -X PUT https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME?spatial=false&providers[]=$PROVIDER_ID_1&providers[]=$PROVIDER_ID_2
    ```

  consumes:
    - application/javascript
  responses:
    '204':
      description: View created successfully.
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: File not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
  - name: sid
    in: path
    description: >
      Space Id in which view will be created.
    type: string
    required: true
  - name: view_name
    in: path
    description: Name of the view.
    type: string
    required: true
  - name: mapFunction
    in: body
    description: The view map function.
    schema:
      type: string
    required: true
  - name: spatial
    in: query
    description: Specifies whether view is spatial or not.
    type: boolean
    default: false
    required: false
  - name: update_min_changes
    in: query
    description: Minimum number of document changes to trigger re-viewing.
    type: integer
    required: false
  - name: replica_update_min_changes
    in: query
    description: Minimum number of document changes to trigger re-viewing of a replica view.
    type: integer
    required: false
  - name: providers[]
    in: query
    description: Providers which will create view.
    type: array
    items:
      type: string
    collectionFormat: multi
    required: false
  x-code-samples:
  - lang: Shell
    source: "cat view.js | oneprovider-rest-cli createSpaceView sid=$SPACE_ID view_name=$VIEW_NAME 'providers[]=$PROVIDER_ID_1' 'providers[]=$PROVIDER_ID_2' -"


patch:
  operationId: update_space_view
  x-onedata-parse_body: '{as_is, <<"mapFunction">>}'
  x-onedata-gri:
    type: op_space
    id: ?BINDING(sid)
    aspect: "{view, ?BINDING(view_name)}"
  summary: Update view
  tags:
    - View
  x-bash-codegen-description: |
    This method updates existing view definition.
    
    It takes the same arguments as PUT. Only specified parameters will be overwritten.

    This operation requires `space_manage_views` privilege.
  description: |
    This method updates existing view definition.
    
    It takes the same arguments as PUT. Only specified parameters will be overwritten.

    This operation requires `space_manage_views` privilege.

    ***Example cURL requests***

    **Update space view**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" \
    -H "Content-Type: application/javascript" \
    -X PATCH https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME?update_min_changes=10
    ```

  consumes:
    - application/javascript
  responses:
    '204':
      description: View updated successfully.
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: File not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
  - name: sid
    in: path
    description: >
      Space Id in which view exist.
    type: string
    required: true
  - name: view_name
    in: path
    description: Name of the view.
    type: string
    required: true
  - name: mapFunction
    in: body
    description: The view map function.
    schema:
      type: string
    required: false
  - name: spatial
    in: query
    description: Specifies whether view is spatial or not.
    type: boolean
    required: false
  - name: update_min_changes
    in: query
    description: Minimum number of document changes to trigger re-viewing.
    type: integer
    required: false
  - name: replica_update_min_changes
    in: query
    description: Minimum number of document changes to trigger re-viewing of a replica view.
    type: integer
    required: false
  - name: providers[]
    in: query
    description: Providers which will create view.
    type: array
    items:
      type: string
    collectionFormat: multi
    required: false
  x-code-samples:
  - lang: Shell
    source: "cat view.js | oneprovider-rest-cli updateSpaceView sid=$SPACE_ID view_name=$VIEW_NAME 'providers[]=$PROVIDER_ID' -"


delete:
  operationId: remove_space_view
  x-onedata-gri:
    type: op_space
    id: ?BINDING(sid)
    aspect: "{view, ?BINDING(view_name)}"
  summary: Remove view
  tags:
    - View
  x-bash-codegen-description: |
    This method removes an existing view.

    This operation requires `space_manage_views` privilege.
  description: |
    This method removes an existing view.

    This operation requires `space_manage_views` privilege.

    ***Example cURL requests***

    **Remove existing view**
    ```bash
    curl -H "X-Auth-Token: $TOKEN" -X DELETE \
    https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME
    ```

  responses:
    '204':
      description: View removed successfully.
    '400':
      description: Invalid request.
      schema:
        $ref: '#/definitions/Error'
    '403':
      description: Forbidden request.
      schema:
        $ref: '#/definitions/Error'
    '404':
      description: File not found.
      schema:
        $ref: '#/definitions/Error'
    '500':
      description: Internal server error.
      schema:
        $ref: '#/definitions/Error'
  parameters:
  - name: sid
    in: path
    description: >
      Space Id in which view exist.
    type: string
    required: true
  - name: view_name
    in: path
    description: Name of the view.
    type: string
    required: true
  x-code-samples:
  - lang: Shell
    source: "oneprovider-rest-cli removeSpaceView sid=$SPACE_ID view_name=$VIEW_NAME"
